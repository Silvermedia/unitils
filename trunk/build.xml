<?xml version="1.0" encoding="UTF-8"?>
<project name="unitils" default="build" xmlns:maven="urn:maven-ant-tasks">

    <!-- Performs a clean build and runs the tests -->
    <target name="build" description="`Performs a clean build">
        <maven target="clean"/>
        <maven target="install"/>
        <antcall target="run-tests"/>
    </target>

    <!-- Runs all JUnit tests -->
    <target name="run-tests" depends="load-pom" description="Runs all JUnit tests">
        <property name="test.outputDirectory" value="${pom.build.directory}/test-output"/>
        <mkdir dir="${test.outputDirectory}"/>
        <junit printsummary="true" haltonfailure="true" filtertrace="false" showoutput="false" fork="true" forkmode="perBatch">
            <classpath>
                <path refid="classpath.test"/>
                <path location="${pom.build.outputDirectory}"/>
                <path location="${pom.build.testOutputDirectory}"/>
            </classpath>

            <formatter type="plain"/>

            <batchtest todir="${test.outputDirectory}">
                <fileset dir="${pom.build.testOutputDirectory}">
                    <include name="**/*Test.class"/>
                    <!-- ignore inner classes -->
                    <exclude name="**/*$*Test.class"/>
                    <!-- ignore tests in default package -->
                    <exclude name="*Test.class"/>
                    <!-- ignore TestNG tests -->
                    <exclude name="**/*TestNGTest*.class"/>
                    <exclude name="org/unitils/spring/SpringUnitilsJUnit38Test.class"/>
                    <exclude name="org/unitils/spring/SpringUnitilsJUnit4Test.class"/>
                    <exclude name="org/unitils/orm/jpa/JpaModuleInjectionTest.class"/>

                    <exclude name="**/DBMaintainerTest.class"/>
                </fileset>
            </batchtest>
        </junit>
    </target>

    <!-- Releases a new version of Unitils. -->
    <!-- This will perform following tasks: -->
    <!--   Check whether everything is ready to be released -->
    <!--   Update the project version -->
    <!--   Tags the release in SVN -->
    <!--   Downloads a clean version of the tagged release -->
    <!--   Builds the unitils jar and creates the distributions -->
    <!--   Upload unitils jar to Sourceforge repositor so that it can be uploaded to the central maven repo -->
    <!--   Generates the site -->
    <target name="release" depends="load-pom" description="Releases a new version of Unitils.">

        <!--antcall target="create-release-properties"/-->
        <!-- first perform a dry run and check whether all unit-tests pass -->
        <maven target="release:prepare" arg1="-DdryRun=true" arg2="-Dresume=false"/>
        <!--antcall target="run-tests"/-->

        <!-- ask confirmation -->
        <input message="Are you sure you want to peform a release? (y/n)" addproperty="confirmed"/>
        <condition property="aborted">
            <not>
                <equals arg1="y" arg2="${confirmed}"/>
            </not>
        </condition>
        <fail if="aborted">Build aborted by user.</fail>

        <!-- everything ok, perform the release -->
        <antcall target="create-settings-file"/>
        <maven target="release:prepare"/>
        <maven target="release:perform" arg1="-s${settings.file}"/>
        <!-- clean up -->
        <maven target="release:clean"/>
        <delete file="${settings.file}"/>

        <!-- build the site -->
        <maven target="site"/>
    </target>


    <!-- Utility tasks -->

    <!-- Maven only supports configuration of username and password through settings file. -->
    <!-- This will dynamically create a settings file -->
    <target name="create-settings-file" depends="load-pom">
        <property name="settings.file" value="${pom.build.directory}/settings.xml"/>

        <input message="Sourceforge username" addproperty="sourceforge.username"/>
        <input message="Sourceforge password" addproperty="sourceforge.password"/>
        <mkdir dir="${pom.build.directory}"/>
        <echoxml file="${settings.file}">
            <settings>
                <interactiveMode>true</interactiveMode>
                <servers>
                    <server>
                        <id>remote-repository</id>
                        <username>${sourceforge.username}</username>
                        <password>${sourceforge.password}</password>
                    </server>
                </servers>
            </settings>
        </echoxml>
    </target>


    <!-- Loads the unitils pom -->
    <target name="load-pom">
        <typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="urn:maven-ant-tasks" classpath="lib/ant/maven-ant-tasks-2.0.8.jar"/>
        <maven:pom id="pom" file="pom.xml"/>
        <maven:dependencies pomrefid="pom" pathId="classpath.test" filesetId="fileset.test" useScope="test"/>
    </target>


    <!-- Calls maven for the given target and optional arguments -->
    <macrodef name="maven">
        <attribute name="target"/>
        <attribute name="arg1" default=""/>
        <attribute name="arg2" default=""/>
        <attribute name="arg3" default=""/>
        <attribute name="input" default=""/>
        <sequential>
            <exec executable="mvn.bat" searchpath="true" failonerror="true">
                <arg value="@{target}"/>
                <arg value="@{arg1}"/>
                <arg value="@{arg2}"/>
                <arg value="@{arg3}"/>
            </exec>
        </sequential>
    </macrodef>


</project>
