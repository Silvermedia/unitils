
unitils.configuration.customFileName= unitils.properties
unitils.configuration.localFileName= unitils-local.properties


###################################################################################################
## Configuration of unit test classes that extend be.ordina.unitils.testing.dao.BaseDAOTestCase ##
##################################################################################################

#####################################################################################
# The first part of this file contains properties that will differ for each project #
#####################################################################################

# This property specifies the underlying DBMS implementation. Supported values are 'oracle' and 'db2'. The value
# of this property defines which vendor specific implementation of ConstraintsDisabler is chosen.
database.dialect=oracle

# Properties for the PropertiesDataSourceFactory
dataSource.driverClassName=com.mysql.jdbc.Driver
dataSource.url=jdbc:mysql://localhost:3306/test
dataSource.userName=root
dataSource.password=admin

### DBMaintainer configuration ###
# Indicates if recreating the database from scratch when an already executed script is updated is enabled. If false, the
# DBMaintainer will give an error when an existing script is updated.
dbMaintainer.fromScratch.enabled=true
# Directory in which the database update scripts are located.
dbMaintainer.fileScriptSource.dir=C:\\Temp\\dbmaintainer


# Directory where to put the database DTD file.
dtdGenerator.dtd.filename=C:\\Temp\\database\\dtd\\database.dtd

inject.propertyaccesstype.default=field

### BaseHibernateTestCase configuration ###
# Name of hibernate config file for testing purposes. Should be in classpath.
hibernatetestcase.hibernate.cfg.configfiles=hibernate-unittest.cfg.xml
# Concrete Hibernate org.hibernate.cfg.Configuration class. Should be either org.hibernate.cfg.Configuration or
# org.hibernate.cfg.AnnotationConfiguration
hibernatetestcase.hibernate.cfg.configurationclass=org.hibernate.cfg.AnnotationConfiguration 

##########################################################################################
# The remainder of this file contains properties that will be the same for most projects #
##########################################################################################

# Full qualified class name of an implementation of be.ordina.unitils.dbmaintainermaintainer.config.DataSourceFactory. This class is used to
# provide a DataSource for all database unit tests and for the DBMaintainer
dataSourceFactory.className=be.ordina.unitils.dbmaintainermaintainer.config.PropertiesDataSourceFactory

# If set to true, the DBMaintainer will be used to update the unit test database schema. This is done once for each
# test run, before the execution of the first class extending BaseDAOTestCase.
# The DBMaintainer is configured using the properties specified below.
updateDataBaseSchema.enabled=true

### DBMaintainer configuration ###

# If set to true, an implementation of be.ordina.unitils.dbmaintainermaintainer.constraints.ConstraintsDisabler will be used to disable the
# foreign key and not null constraints of the unit test database schema.
# The ConstraintsDisabler is configured using the properties specified below. The property with key 'database.dialect'
# specifies which implementation is used.
dbMaintainer.disableConstraints.enabled=true

# If set to true, an implementation of be.ordina.unitils.dbmaintainermaintainer.sequences.SequenceUpdater will be used to update the
# sequences to a suffiently high value, so that test data can be inserted without problems.
# The SequenceUpdater is configured using the properties specified below. The property with key 'database.dialect'
# specifies which implementation is used.
dbMaintainer.updateSequences.enabled=true

# If set to true, an implemention of be.ordina.unitils.dbmaintainermaintainer.dtd.DtdGenerator will be used to generate a DTD that
# represents the database schema. This DTD can be used in datafiles to verifyAll if they are up-to-date and to enable
# code completion.
dbMaintainer.generateDTD.enabled=true


# Fully qualified name of the implementation of be.ordina.unitils.dbmaintainermaintainer.maintainer.version.VersionSource that is used.
# The recommeded value is 'be.ordina.unitils.dbmaintainermaintainer.maintainer.version.DBVersionSource', which will retrieve the database version
# from the updated database schema itself. Another implementation could e.g. retrieve the version from a file.
dbMaintainer.versionSource.className=be.ordina.unitils.dbmaintainermaintainer.maintainer.version.DBVersionSource

# Fully qualified name of the implementation of be.ordina.unitils.dbmaintainermaintainer.maintainer.script.ScriptSource that is used.
# The recommeded value is 'be.ordina.unitils.dbmaintainermaintainer.maintainer.script.FileScriptSource', which will retrieve the scripts
# from the local file system. Another implementation could e.g. retrieve the scripts directly from the Version Control
# System.
dbMaintainer.scriptSource.className=be.ordina.unitils.dbmaintainermaintainer.maintainer.script.IncrementalFileScriptSource

# Fully qualified name of the implementation of be.ordina.unitils.dbmaintainermaintainer.handler.StatementHandler that is used. The
# recommeded value is 'be.ordina.unitils.dbmaintainermaintainer.handler.JDBCStatementHandler', which will execute the scripts using JDBC. Another
# implementation could e.g. execute these scripts with a vendor specific script executer.
dbMaintainer.statementHandler.className=be.ordina.unitils.dbmaintainermaintainer.handler.JDBCStatementHandler

### DBMaintainer DBVersionSource configuration ###
# Name of the table that will contain the version of the database. The first row of this table should contain the
# version of the database
dbMaintainer.dbVersionSource.tableName=db_version
# Name of the column in which the version of the database is stored.
dbMaintainer.dbVersionSource.columnName=version

### DBMaintainer FileScriptSource configuration - remainder ###
# Extension of the files containing the database update scripts
dbMaintainer.fileScriptSource.fileExtension=sql
# Number of digits in the version nr of the files. E.g. if equal to 4, the version nr of the 35th database update
# file is '0035'. The fileName of the script has to start with this version number and an underscore. The rest of
# the filename is an arbitrary string, and the extension given by the fileExtension property. So 0035_dropUserTable.sql
# would in this case be a valid fileName.
dbMaintainer.fileScriptSource.versionNrLength=3

### DBMaintainer ConstraintsDisabler configuration ###
# Fully qualified name of the implementation of be.ordina.unitils.dbmaintainermaintainer.handler.StatementHandler that is used. The recommeded
# value is 'be.ordina.unitils.dbmaintainermaintainer.handler.DBStatementHandler', which will execute the statements on the database. Another
# implementation could e.g. write the statements to a file.
constraintsDisabler.statementHandler.className=be.ordina.unitils.dbmaintainermaintainer.handler.JDBCStatementHandler
# Following properties define different supported implementations of the ConstraintsDisabler
constraintsDisabler.className.oracle=be.ordina.unitils.dbmaintainermaintainer.constraints.OracleConstraintsDisabler
constraintsDisabler.className.db2=be.ordina.unitils.dbmaintainermaintainer.constraints.DB2ConstraintsDisabler

### DBMaintainer SequenceUpdater configuration ###
# Lowest acceptable value of a sequence in a unit test database. The SequenceUpdater will make sure all sequences
# have this value or higher before proceeding
sequenceUpdater.sequencevalue.lowestacceptable=100
# Following properties define different supported implementations of the SequenceUpdater
sequenceUpdater.className.oracle=be.ordina.unitils.dbmaintainermaintainer.sequences.OracleSequenceUpdater

### DBMaintainer DtdGenerator configuration ###
# Fully qualified name of the implementation of be.ordina.unitils.dbmaintainermaintainer.dtd.DtdGenerator that is used.
# The recommended value is 'be.ordina.unitils.dbmaintainermaintainer.dtd.FlatXmlDataSetDtdGenerator'
dbMaintainer.database.dtdGenerator.className=be.ordina.unitils.dbmaintainermaintainer.dtd.FlatXmlDataSetDtdGenerator

### DBMaintainer DBClearer configuration ###
# Fully qualified classname of the implementation of be.ordina.unitils.dbmaintainermaintainer.clear.DBClearer, one for each supported
# database dialect.
dbMaintainer.dbClearer.className.oracle=be.ordina.unitils.dbmaintainermaintainer.clear.OracleDBClearer

### Unitils core configuration ###
core.databasetest=org.unitils.dbunit.DatabaseTestModule
core.hibernatetest=org.unitils.hibernate.HibernateTestModule