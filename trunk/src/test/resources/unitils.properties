###########################################################################
# This file defines the Unitils configuration for Unitils' own unit tests #
###########################################################################

# List of modules that is loaded. Overloading this list is useful when e.g. you don't use Hibernate, and you want to
# be able to use Unitils without having Hibernate in the classpath.
unitils.modules=database,dbunit,easymock,inject

# Properties for the PropertiesDataSourceFactory
dataSource.driverClassName=org.hsqldb.jdbcDriver
dataSource.url=jdbc:hsqldb:mem:unitils
dataSource.schemaName=public
dataSource.userName=sa
dataSource.password=

# This property specifies the underlying DBMS implementation. Supported values are 'oracle', 'db2', 'mysql' and 'hsqldb'.
# The value of this property defines which vendor specific implementations of ConstraintsDisabler, SequenceUpdater and
# DbClearer are chosen.
database.dialect=hsqldb

# If set to true, the DBMaintainer will be used to update the unit test database schema. This is done once for each
# test run, before the execution of the first class annotated with @DatabaseTest, if any.
updateDataBaseSchema.enabled=false

# If set to true, an implementation of org.unitils.dbmaintainer.constraints.ConstraintsDisabler will be used to disable
# the foreign key and not null constraints of the unit test database schema.
# The ConstraintsDisabler is configured using the properties specified below. The property with key 'database.dialect'
# specifies which implementation is used.
dbMaintainer.disableConstraints.enabled=false

# Comma separated list of table names. The tables in question will not be dropped by the DBClearer, and not cleared
# by the DBCleaner. Tables like these typically contain rather static, read only or type data. The database version table,
# indicated by the property dbMaintainer.dbVersionSource.tableName, is preserved automatically, and doesn't have to
# be included in this list.
dbMaintainer.tablesToPreserve=

# Name of hibernate config files for testing purposes. Should be in classpath.
hibernatetestcase.hibernate.cfg.configfiles=
# Concrete Hibernate org.hibernate.cfg.Configuration class. Should be either org.hibernate.cfg.Configuration or
# org.hibernate.cfg.AnnotationConfiguration
hibernatetestcase.hibernate.cfg.configurationclass=org.hibernate.cfg.AnnotationConfiguration

# Mode of accessing properties
org.unitils.inject.PropertyAccessType=field
